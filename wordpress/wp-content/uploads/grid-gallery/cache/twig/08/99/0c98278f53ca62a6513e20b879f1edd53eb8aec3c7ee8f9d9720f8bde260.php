<?php

/* @galleries/helpers/attachment.twig */
class __TwigTemplate_08990c98278f53ca62a6513e20b879f1edd53eb8aec3c7ee8f9d9720f8bde260 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
    }

    // line 1
    public function getimage($_attachmentId = null, $_settings = null)
    {
        $context = $this->env->mergeGlobals(array(
            "attachmentId" => $_attachmentId,
            "settings" => $_settings,
        ));

        $blocks = array();

        ob_start();
        try {
            // line 2
            echo "\t";
            list($context["width"], $context["height"], $context["crop"]) =             array(0, 0, 0);
            // line 3
            echo "
\t";
            // line 4
            if (($this->getAttribute($this->getAttribute((isset($context["settings"]) ? $context["settings"] : null), "area"), "photo_width_unit") == 0)) {
                // line 5
                echo "\t\t";
                $context["width"] = $this->getAttribute($this->getAttribute((isset($context["settings"]) ? $context["settings"] : null), "area"), "photo_width");
                // line 6
                echo "\t";
            }
            // line 7
            echo "
\t";
            // line 8
            if (($this->getAttribute($this->getAttribute((isset($context["settings"]) ? $context["settings"] : null), "area"), "photo_height_unit") == 0)) {
                // line 9
                echo "\t\t";
                $context["height"] = $this->getAttribute($this->getAttribute((isset($context["settings"]) ? $context["settings"] : null), "area"), "photo_height");
                // line 10
                echo "\t";
            }
            // line 11
            echo "
\t";
            // line 12
            if ((($this->getAttribute($this->getAttribute((isset($context["settings"]) ? $context["settings"] : null), "area"), "grid") == 0) || ($this->getAttribute($this->getAttribute((isset($context["settings"]) ? $context["settings"] : null), "area"), "grid") == 3))) {
                // line 13
                echo "\t\t";
                $context["crop"] = 1;
                // line 14
                echo "\t";
            } else {
                // line 15
                echo "\t\t";
                $context["height"] = null;
                // line 16
                echo "\t";
            }
            // line 17
            echo "
\t";
            // line 18
            echo twig_escape_filter($this->env, call_user_func_array($this->env->getFunction('get_attachment')->getCallable(), array((isset($context["attachmentId"]) ? $context["attachmentId"] : null), (isset($context["width"]) ? $context["width"] : null), (isset($context["height"]) ? $context["height"] : null), (isset($context["crop"]) ? $context["crop"] : null))), "html", null, true);
            echo "
";
        } catch (Exception $e) {
            ob_end_clean();

            throw $e;
        }

        return ('' === $tmp = ob_get_clean()) ? '' : new Twig_Markup($tmp, $this->env->getCharset());
    }

    public function getTemplateName()
    {
        return "@galleries/helpers/attachment.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  78 => 18,  75 => 17,  72 => 16,  69 => 15,  63 => 13,  61 => 12,  58 => 11,  55 => 10,  52 => 9,  50 => 8,  47 => 7,  44 => 6,  41 => 5,  39 => 4,  36 => 3,  33 => 2,  46 => 2,  21 => 1,  1881 => 4,  1869 => 3,  1861 => 1132,  1857 => 1131,  1851 => 1128,  1847 => 1127,  1841 => 1124,  1837 => 1123,  1831 => 1120,  1827 => 1119,  1822 => 1116,  1811 => 1113,  1802 => 1112,  1797 => 1111,  1795 => 1094,  1791 => 1092,  1788 => 1091,  1785 => 1090,  1781 => 950,  1771 => 946,  1762 => 940,  1758 => 939,  1753 => 937,  1744 => 931,  1740 => 930,  1735 => 929,  1730 => 928,  1727 => 927,  1722 => 802,  1713 => 794,  1709 => 793,  1702 => 789,  1696 => 786,  1693 => 785,  1690 => 784,  1685 => 799,  1683 => 784,  1677 => 781,  1673 => 780,  1666 => 776,  1660 => 773,  1656 => 771,  1653 => 770,  1642 => 761,  1638 => 760,  1634 => 759,  1630 => 758,  1626 => 757,  1619 => 756,  1615 => 755,  1611 => 754,  1607 => 753,  1603 => 752,  1599 => 751,  1591 => 746,  1582 => 740,  1575 => 736,  1564 => 728,  1560 => 727,  1555 => 725,  1551 => 724,  1543 => 719,  1534 => 713,  1527 => 709,  1518 => 703,  1511 => 699,  1502 => 693,  1495 => 689,  1486 => 683,  1479 => 679,  1470 => 673,  1463 => 669,  1454 => 663,  1447 => 659,  1441 => 655,  1439 => 652,  1434 => 649,  1431 => 645,  1429 => 644,  1425 => 642,  1422 => 641,  1413 => 481,  1409 => 480,  1401 => 475,  1395 => 472,  1391 => 470,  1388 => 469,  1384 => 462,  1381 => 461,  1374 => 463,  1372 => 461,  1369 => 460,  1367 => 458,  1363 => 456,  1361 => 454,  1357 => 452,  1355 => 450,  1351 => 448,  1349 => 447,  1345 => 445,  1343 => 443,  1339 => 441,  1337 => 439,  1333 => 437,  1331 => 433,  1326 => 430,  1323 => 426,  1321 => 425,  1317 => 423,  1314 => 422,  1305 => 415,  1303 => 414,  1299 => 412,  1297 => 411,  1293 => 409,  1291 => 408,  1287 => 406,  1285 => 405,  1281 => 403,  1279 => 402,  1270 => 396,  1264 => 395,  1259 => 393,  1253 => 392,  1248 => 390,  1242 => 389,  1235 => 385,  1225 => 378,  1218 => 374,  1209 => 368,  1203 => 367,  1199 => 366,  1193 => 365,  1186 => 361,  1178 => 355,  1175 => 354,  1166 => 347,  1164 => 345,  1160 => 343,  1158 => 342,  1154 => 340,  1152 => 338,  1149 => 337,  1146 => 323,  1144 => 312,  1139 => 309,  1136 => 308,  1132 => 279,  1129 => 278,  1122 => 280,  1120 => 278,  1116 => 276,  1114 => 260,  1110 => 258,  1108 => 257,  1103 => 254,  1100 => 250,  1098 => 249,  1094 => 247,  1091 => 246,  1079 => 236,  1077 => 234,  1073 => 232,  1071 => 230,  1067 => 228,  1065 => 226,  1062 => 225,  1058 => 220,  1056 => 219,  1052 => 217,  1050 => 215,  1046 => 213,  1044 => 211,  1040 => 209,  1038 => 207,  1035 => 206,  1031 => 202,  1029 => 192,  1022 => 188,  1013 => 182,  1009 => 181,  1003 => 177,  1001 => 176,  996 => 173,  993 => 172,  988 => 1136,  986 => 1090,  976 => 1083,  972 => 1082,  968 => 1081,  962 => 1078,  957 => 1077,  955 => 1076,  948 => 1072,  941 => 1068,  916 => 1045,  906 => 1041,  900 => 1038,  890 => 1037,  880 => 1036,  877 => 1035,  873 => 1034,  869 => 1032,  867 => 960,  861 => 957,  856 => 955,  850 => 951,  848 => 927,  843 => 925,  840 => 924,  834 => 923,  827 => 919,  821 => 916,  809 => 908,  802 => 904,  791 => 899,  785 => 896,  781 => 895,  776 => 894,  773 => 893,  769 => 892,  764 => 890,  761 => 889,  758 => 888,  754 => 886,  752 => 885,  749 => 884,  743 => 882,  741 => 881,  736 => 880,  732 => 879,  728 => 878,  723 => 877,  721 => 876,  715 => 872,  705 => 868,  700 => 866,  694 => 865,  688 => 864,  685 => 863,  681 => 862,  678 => 861,  675 => 860,  672 => 859,  670 => 858,  667 => 857,  665 => 848,  659 => 845,  654 => 843,  646 => 838,  639 => 834,  629 => 827,  624 => 825,  618 => 822,  613 => 820,  608 => 818,  601 => 814,  597 => 813,  590 => 809,  584 => 806,  579 => 804,  576 => 803,  574 => 802,  571 => 801,  569 => 770,  565 => 768,  563 => 641,  556 => 636,  554 => 635,  547 => 630,  545 => 629,  541 => 627,  539 => 623,  535 => 621,  533 => 620,  529 => 618,  527 => 616,  523 => 614,  521 => 610,  517 => 608,  515 => 607,  511 => 605,  509 => 604,  505 => 602,  503 => 599,  499 => 597,  497 => 594,  493 => 592,  491 => 589,  488 => 588,  486 => 587,  482 => 585,  480 => 582,  473 => 578,  467 => 575,  461 => 572,  454 => 568,  445 => 562,  438 => 560,  433 => 558,  426 => 556,  418 => 551,  412 => 547,  410 => 530,  407 => 527,  405 => 520,  402 => 519,  400 => 491,  393 => 486,  391 => 469,  387 => 467,  385 => 422,  382 => 421,  380 => 354,  377 => 353,  375 => 308,  367 => 302,  365 => 301,  354 => 293,  350 => 292,  342 => 289,  337 => 287,  332 => 284,  330 => 246,  327 => 245,  325 => 172,  319 => 169,  315 => 168,  311 => 167,  306 => 165,  303 => 164,  300 => 163,  298 => 162,  295 => 161,  292 => 160,  283 => 154,  268 => 144,  260 => 143,  253 => 138,  246 => 134,  242 => 132,  228 => 121,  220 => 120,  212 => 114,  206 => 112,  204 => 111,  201 => 110,  199 => 109,  190 => 103,  180 => 96,  175 => 94,  166 => 88,  161 => 86,  152 => 80,  147 => 78,  143 => 77,  140 => 76,  132 => 63,  129 => 62,  127 => 61,  124 => 60,  121 => 59,  116 => 53,  109 => 54,  107 => 53,  101 => 50,  93 => 45,  85 => 40,  77 => 35,  66 => 14,  59 => 27,  51 => 25,  48 => 8,  45 => 7,);
    }
}
